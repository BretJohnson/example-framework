namespace ExampleFramework;

public abstract class UIComponent<TUIExample> where TUIExample : UIExample
{
    private UIComponentCategory? category;
    private readonly string? displayName;
    private readonly List<TUIExample> examples = new();

    public UIComponent(string? displayName)
    {
        this.displayName = displayName;
    }

    /// <summary>
    /// DisplayName is intended to be what's shown in the UI to identify the component. It can contain spaces and
    /// isn't necessarily unique. It defaults to the class name (with no namespace qualifier) but can be
    /// overridden by the developer.
    /// </summary>
    public string DisplayName => this.displayName ?? NameUtilities.GetUnqualifiedName(this.Name);

    /// <summary>
    /// Name is intended to be what's used by the code to identify the component. It's the component's
    /// full qualified type name and is unique.
    /// </summary>
    public abstract string Name { get; }

    public UIComponentCategory? Category => this.category;

    public void InitCategory(UIComponentCategory category)
    {
        if (this.category != null && string.Compare(this.category.Name, category.Name, StringComparison.OrdinalIgnoreCase) != 0)
        {
            throw new InvalidOperationException($"Component '{this.Name}' can't be set to category '{category.Name}' since it already has category '{this.category.Name}' set");
        }
        this.category = category;
    }

    public IReadOnlyList<TUIExample> Examples => this.examples;

    public TUIExample? GetExample(string name)
    {
        foreach (TUIExample example in this.examples)
        {
            if (example.Name.Equals(name, StringComparison.Ordinal))
            {
                return example;
            }
        }

        return null;
    }

    public void AddExample(TUIExample example)
    {
        this.examples.Add(example);

        // If there's a user defined example, remove any auto-generated examples
        if (!example.IsAutoGenerated)
        {
            this.RemoveAutoGeneratedExamples();
        }
    }

    public bool IsAutoGenerated => this.examples.All(e => e.IsAutoGenerated);


    private void RemoveAutoGeneratedExamples()
    {
        this.examples.RemoveAll(e => e.IsAutoGenerated);
    }
}
