using System.Reflection;

namespace ExampleFramework.App;

public class AppUIComponents : UIComponents<AppUIComponent, AppUIExample>
{
    public void AddFromAssembly(Assembly assembly)
    {
        IEnumerable<UIComponentCategoryAttribute> uiComponentCategoryAttributes = assembly.GetCustomAttributes<UIComponentCategoryAttribute>();
        foreach (UIComponentCategoryAttribute uiComponentCategoryAttribute in uiComponentCategoryAttributes)
        {
            UIComponentCategory category = this.GetOrAddCategory(uiComponentCategoryAttribute.Name);

            foreach (Type type in uiComponentCategoryAttribute.UIComponentTypes)
            {
                AppUIComponent component = this.GetOrAddComponent(type);
                component.InitCategory(category);
            }
        }

        Type[] types = assembly.GetExportedTypes();
        foreach (Type type in types)
        {
            UIExampleAttribute? typeExampleAttribute = type.GetCustomAttribute<UIExampleAttribute>(false);
            if (typeExampleAttribute != null)
            {
                this.AddExample(new ClassUIExample(typeExampleAttribute, type));
            }

            MethodInfo[] methods = type.GetMethods(BindingFlags.Static | BindingFlags.Public | BindingFlags.DeclaredOnly);
            foreach (MethodInfo method in methods)
            {
                UIExampleAttribute? uiExampleAttribute = method.GetCustomAttribute<UIExampleAttribute>(false);

                if (uiExampleAttribute != null)
                {
                    this.AddExample(new StaticMethodUIExample(uiExampleAttribute, method));
                }
            }

            if (CanBeAutoGeneratedExample(type))
            {
                AppUIComponent? uiComponent = this.GetUIComponent(type.FullName);

                // If the type doesn't have any examples and this class can be an auto-generated example, then add that
                if ((uiComponent == null || uiComponent.Examples.Count == 0) && CanBeAutoGeneratedExample(type))
                {
                    uiComponent ??= this.GetOrAddComponent(type);

                    var uiExample = new ClassUIExample(type, isAutoGenerated: true);
                    this.AddExample(uiExample);
                }
            }
        }
    }

    private static bool CanBeAutoGeneratedExample(Type type)
    {
        if (type.IsAbstract)
        {
            return false;
        }
  
        bool derivesFromContentPage = false;
        Type baseType = type.BaseType;
        while (baseType != null)
        {
            if (baseType.FullName == "Xamarin.Forms.ContentPage" || baseType.FullName == "Microsoft.Maui.Controls.ContentPage")
            {
                derivesFromContentPage = true;
                break;
            }
            baseType = baseType.BaseType;
        }

        if (! derivesFromContentPage)
        {
            return false;
        }

        // Check for a public or internal default constructor
        ConstructorInfo constructor = type.GetConstructor(Type.EmptyTypes);
        if (constructor == null || !(constructor.IsPublic || constructor.IsAssembly))
        {
            return false;
        }

        return true;
    }

    public AppUIComponent GetOrAddComponent(Type type)
    {
        string name = type.FullName;

        AppUIComponent? component = this.GetUIComponent(name);
        if (component == null)
        {
            component = new AppUIComponent(type, null);
            this.AddUIComponent(component);
        }

        return component;
    }

    public void AddExample(AppUIExample example)
    {
        AppUIComponent component = this.GetOrAddComponent(example.UIComponentType);
        component.AddExample(example);
    }
}
